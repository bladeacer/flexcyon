// The code snippets in this file are derived from the Halcyon theme 
// - https://github.com/dbarenholz/halcyon-obsidian?tab=readme-ov-file
body:is(.theme-dark) {
  --checkbox-color: var(--flexcyon-purple-lilac);
  --checkbox-color-hover: var(--flexcyon-palette-lilac-hover);
  --checkbox-border-color: var(--flexcyon-blue);
  --checkbox-border-color-hover: var(--flexcyon-palette-lilac-hover);
}

body:where(.theme-dark) {
  .checkbox-container {
    background-color: var(--flexcyon-red-salmon);
  }

  .checkbox-container.is-enabled {
    background-color: var(--flexcyon-lime-green);
  }
}

body.theme-dark {
  --flexcyon-ascii-checkboxes-font-size: 1.2rem;
}

@mixin flexcyon-ascii-checkbox($data-task, $color) {

  input[data-task="#{$data-task}"]:checked,
  li[data-task="#{$data-task}"]>input:checked,
  li[data-task="#{$data-task}"]>p>input:checked {
    background-color: transparent;
    border: none;
    font-weight: 900;

    &:hover {
      filter: brightness(1.25);
    }
  }

  input[data-task="#{$data-task}"]:checked::after,
  li[data-task="#{$data-task}"]>input:checked::after,
  li[data-task="#{$data-task}"]>p>input:checked::after {
    background-color: transparent;
    content: $data-task;
    color: $color;
    font-size: var(--flexcyon-ascii-checkboxes-font-size);
    text-align: center;
    -webkit-mask-image: none;
    mask-image: none;
    top: -0.325em;
  }

}

// Add code to tweak font size and stuff for $ and * checkboxes
body.flexcyon-ascii-checkboxes-enabled {

  @include flexcyon-ascii-checkbox("!", var(--color-red));
  @include flexcyon-ascii-checkbox(">", var(--color-purple));
  @include flexcyon-ascii-checkbox("i", var(--color-blue));
  @include flexcyon-ascii-checkbox("?", var(--color-green));
  @include flexcyon-ascii-checkbox("#", var(--color-cyan));
  @include flexcyon-ascii-checkbox(".", var(--color-orange));
  @include flexcyon-ascii-checkbox("<", var(--color-yellow));
  @include flexcyon-ascii-checkbox("$", var(--text-accent));

  @include flexcyon-ascii-checkbox("*", var(--color-red));
  @include flexcyon-ascii-checkbox("'", var(--color-green));
  @include flexcyon-ascii-checkbox("@", var(--color-blue));

  input[data-task='"']:checked,
  li[data-task='"']>input:checked,
  li[data-task='"']>p>input:checked {
    background-color: transparent;
    border: none;
    font-weight: 900;

    &:hover {
      filter: brightness(1.25);
    }
  }

  input[data-task='"']:checked::after,
  li[data-task='"']>input:checked::after,
  li[data-task='"']>p>input:checked::after {
    content: '“';
    color: var(--color-green);
    font-size: calc(var(--flexcyon-ascii-checkboxes-font-size) + 0.3rem);
    text-align: center;
    -webkit-mask-image: none;
    mask-image: none;
    top: -0.325em;
  }

  input[data-task="'"]:checked::after,
  li[data-task="'"]>input:checked::after,
  li[data-task="'"]>p>input:checked::after {
    content: '‘';
    font-size: calc(var(--flexcyon-ascii-checkboxes-font-size) + 0.3rem);
  }

  input[data-task="i"]:checked::after,
  li[data-task="i"]>input:checked::after,
  li[data-task="i"]>p>input:checked::after {
    border: 1.5px solid var(--color-blue);
    font-size: calc(var(--flexcyon-ascii-checkboxes-font-size) - 0.5rem);
    border-radius: 50%;
    scale: 115%;
    margin-inline-start: -1.5px;
    top: -0.1rem;
  }

  input[data-task="<"]:checked::after,
  li[data-task="<"]>input:checked::after,
  li[data-task="<"]>p>input:checked::after,
  input[data-task=">"]:checked::after,
  li[data-task=">"]>input:checked::after,
  li[data-task=">"]>p>input:checked::after {
    transform: scaleY(1.1);
    top: -0.4rem;
  }

  input[data-task="."]:checked::after,
  li[data-task="."]>input:checked::after,
  li[data-task="."]>p>input:checked::after {
    content: "...";
    font-size: calc(var(--flexcyon-ascii-checkboxes-font-size) - 0.2rem);
    letter-spacing: -0.5px;
  }

  input[data-task="*"]:checked::after,
  li[data-task="*"]>input:checked::after,
  li[data-task="*"]>p>input:checked::after {
    font-size: calc(var(--flexcyon-ascii-checkboxes-font-size) + 0.75rem);
  }

  input[data-task="$"]:checked::after,
  li[data-task="$"]>input:checked::after,
  li[data-task="$"]>p>input:checked::after {
    font-size: calc(var(--flexcyon-ascii-checkboxes-font-size) - 0.05rem);
  }

  input[data-task="@"]:checked::after,
  li[data-task="@"]>input:checked::after,
  li[data-task="@"]>p>input:checked::after {
    font-size: calc(var(--flexcyon-ascii-checkboxes-font-size) - 0.05rem);
    top: -0.45rem;
  }

  input[data-task="l"]:checked,
  li[data-task="l"]>input:checked,
  li[data-task="l"]>p>input:checked {
    background-color: transparent;
    font-weight: 900;

    &:hover {
      filter: brightness(1.25);
    }
  }
}

body.flexcyon-rainbow-bullet-points {

  ol>li:nth-of-type(6n+1)::marker,
  ul>li:nth-of-type(6n+1)::marker {
    color: var(--color-blue);
  }

  ol>li:nth-of-type(6n+2)::marker,
  ul>li:nth-of-type(6n+2)::marker {
    color: var(--color-cyan);
  }

  ol>li:nth-of-type(6n+3)::marker,
  ul>li:nth-of-type(6n+3)::marker {
    color: var(--color-pink);
  }

  ol>li:nth-of-type(6n+4)::marker,
  ul>li:nth-of-type(6n+4)::marker {
    color: var(--color-green);
  }

  ol>li:nth-of-type(6n+5)::marker,
  ul>li:nth-of-type(6n+5)::marker {
    color: var(--color-yellow);
  }
}