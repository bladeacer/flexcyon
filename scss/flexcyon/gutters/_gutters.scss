body {
    .cm-gutterElement.cm-active {
        font-weight: 900;
        font-size: var(--font-ui-medium);
        color: rgba(var(--color-green-rgb), 60%);
    }
}


body:not(.is-mobile) .cm-lineNumbers .cm-active,
body:not(.is-mobile) .cm-lineNumbers *::before {
    font-size: calc(var(--font-ui-small) + 0.05rem);
    padding-right: 4px;
}

@mixin hide-preceding-lines($lines-to-hide) {
    @for $i from 0 through ($lines-to-hide) {
        $sibling-selector: "";
        @for $j from 1 through $i {
            $sibling-selector: $sibling-selector + " + *";
        }

        .cm-lineNumbers .cm-active #{$sibling-selector},
        .cm-lineNumbers *:has(#{$sibling-selector} + .cm-active) {
            font-size: 0;
        }
    }
    .cm-lineNumbers *:has(+ .cm-active) {
        font-size: 0;
    }
}

@mixin write-relative-lines($lines-to-hide) {
    @for $i from 0 through ($lines-to-hide - 1) {
        $sibling-selector: "";
        @for $j from 0 through $i {
            $sibling-selector: $sibling-selector + " + *";

            .cm-lineNumbers *:has(#{$sibling-selector} + .cm-active)::before {
                --flexcyon-rel-abv-#{$j}: "#{$j}";
                content: var(--flexcyon-rel-abv-#{$j});
            }
            .cm-lineNumbers .cm-active #{$sibling-selector}::before {
                --flexcyon-rel-bel-#{$j+1}: "#{$j+1}";
                content: var(--flexcyon-rel-bel-#{$j+1});
            }
        }
    }
    .cm-lineNumbers *:has(+ .cm-active)::before {
        --flexcyon-rel-abv-1: "1";
        content: var(--flexcyon-rel-abv-1);
    }
}

@mixin target-relative-line-abv($line-no, $content, $mod-font-size: 0) {
    @if $line-no == 1 {
        .cm-lineNumbers *:has(+ .cm-active)::before {
            --flexcyon-rel-abv-1: "#{$content}"
        }
        @if $mod-font-size != 0 {
            .cm-lineNumbers *:has(+ .cm-active)::before {
                font-size: #{$mod-font-size}rem;
            }
        }
    }
    @else {
        $sibling-selector: "";
        @for $j from 1 through $line-no {
            $sibling-selector: $sibling-selector + " + *";
        }

        .cm-lineNumbers *:has(#{$sibling-selector} + .cm-active)::before {
            --flexcyon-rel-abv-#{$line-no - 1}: "#{$content}";
        }
        @if $mod-font-size != 0 {
            .cm-lineNumbers *:has(#{$sibling-selector} + .cm-active)::before {
                font-size: #{$mod-font-size}rem;
            }
        }
    }
}

@mixin target-relative-line-bel($line-no, $content, $mod-font-size: 0) {
    $sibling-selector: "";
    @for $j from 1 through ($line-no) {
        $sibling-selector: $sibling-selector + " + *";
    }

    .cm-lineNumbers .cm-active #{$sibling-selector}::before {
        --flexcyon-rel-bel-#{$line-no}: "#{$content}";
    }
    @if $mod-font-size != 0 {
        .cm-lineNumbers .cm-active #{$sibling-selector}::before {
            font-size: #{$mod-font-size}rem;
        }
    }
}

// Override line numbers where there are relative line numbers
body.flexcyon-enable-rel-nums.flexcyon-no-num-with-relative:not(.is-mobile) {
    @include hide-preceding-lines(10);
}

// Do not display other lines which are not relative line numbers
body.flexcyon-enable-rel-nums.flexcyon-relative-num-only:not(.is-mobile) {
    .cm-lineNumbers .cm-gutterElement:not(.cm-active) {
        font-size: 0;
    }
} 

// Normal style relative line numbers
body.flexcyon-enable-rel-nums:not(.is-mobile) {
    @include write-relative-lines(10);
}

// Lower Greek letters
body.flexcyon-enable-rel-nums.flexcyon-greek-rel-nums:not(.is-mobile) {
    @include target-relative-line-abv(1, "α", 0.925);
    @include target-relative-line-abv(2, "β", 0.925);
    @include target-relative-line-abv(3, "γ", 0.925);
    @include target-relative-line-abv(4, "δ", 0.925);
    @include target-relative-line-abv(5, "ε", 0.925);
    @include target-relative-line-abv(6, "ζ", 0.925);
    @include target-relative-line-abv(7, "η", 0.925);
    @include target-relative-line-abv(8, "θ", 0.925);
    @include target-relative-line-abv(9, "ι", 0.95);
    @include target-relative-line-abv(10, "κ", 0.95);

    @include target-relative-line-bel(1, "α", 0.925);
    @include target-relative-line-bel(2, "β", 0.925);
    @include target-relative-line-bel(3, "γ", 0.925);
    @include target-relative-line-bel(4, "δ", 0.925);
    @include target-relative-line-bel(5, "ε", 0.925);
    @include target-relative-line-bel(6, "ζ", 0.925);
    @include target-relative-line-bel(7, "η", 0.925);
    @include target-relative-line-bel(8, "θ", 0.925);
    @include target-relative-line-bel(9, "ι", 0.95);
    @include target-relative-line-bel(10, "κ", 0.95);
}

// Roman numerals
body.flexcyon-enable-rel-nums.flexcyon-roman-rel-nums:not(.is-mobile) {
    @include target-relative-line-abv(1, "I");
    @include target-relative-line-abv(2, "II");
    @include target-relative-line-abv(3, "III");
    @include target-relative-line-abv(4, "IV");
    @include target-relative-line-abv(5, "V");
    @include target-relative-line-abv(6, "VI");
    @include target-relative-line-abv(7, "VII");
    @include target-relative-line-abv(8, "VIII");
    @include target-relative-line-abv(9, "IX");
    @include target-relative-line-abv(10, "X");

    @include target-relative-line-bel(1, "I");
    @include target-relative-line-bel(2, "II");
    @include target-relative-line-bel(3, "III");
    @include target-relative-line-bel(4, "IV");
    @include target-relative-line-bel(5, "V");
    @include target-relative-line-bel(6, "VI");
    @include target-relative-line-bel(7, "VII");
    @include target-relative-line-bel(8, "VIII");
    @include target-relative-line-bel(9, "IX");
    @include target-relative-line-bel(10, "X");
}
